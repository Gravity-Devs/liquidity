syntax = "proto3";
package tendermint.liquidity;

import "liquidity.proto";
import "tx.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/coin.proto";

option go_package = "github.com/tendermint/liquidity/types";


message LiquidityPoolRecord {
    LiquidityPool liquidity_pool = 1 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"liquidity_pool\""];
    LiquidityPoolMetaData liquidity_pool_meta_data = 2 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"liquidity_pool_meta_data\""];
    LiquidityPoolBatch liquidity_pool_batch = 3 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"liquidity_pool_batch\""];
    // TODO: msg in BatchPool*Msg pointer issue, try and delete when unnecessary
    repeated BatchPoolSwapMsgRecord batch_pool_swap_msg_records = 4   [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"batch_pool_swap_msg_records\""];
    repeated BatchPoolDepositMsg batch_pool_deposit_msgs = 5  [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"batch_pool_deposit_msgs\""];
    repeated BatchPoolWithdrawMsg batch_pool_withdraw_msgs = 6   [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"batch_pool_withdraw_msgs\""];
    repeated BatchPoolSwapMsg batch_pool_swap_msgs = 7   [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"batch_pool_swap_msgs\""];
    // TODO: invariant check balance of escrow module acc, reserveAcc
}


// GenesisState defines the liquidity module's genesis state.
message GenesisState {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    // params defines all the parameters of related to liquidity.
    Params params = 1 [(gogoproto.nullable) = false];


    repeated LiquidityPoolRecord liquidity_pool_records = 2   [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"liquidity_pools\""];
}

//
//// GenesisState defines the liquidity module's genesis state.
//message GenesisState {
//    option (gogoproto.equal)           = false;
//    option (gogoproto.goproto_getters) = false;
//
//    // params defines all the parameters of related to liquidity.
//    Params params = 1 [(gogoproto.nullable) = false];
//
//    repeated LiquidityPool liquidity_pools = 2   [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"liquidity_pools\""];
//
//    repeated LiquidityPoolMetaData liquidity_pools_meta_data = 3   [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"liquidity_pools_meta_data\""];
//
//    repeated LiquidityPoolBatch liquidity_pool_batches = 4   [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"liquidity_pool_batches\""];
//
//    repeated BatchPoolDepositMsg batch_pool_deposit_msgs = 5   [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"batch_pool_deposit_msgs\""];
//
//    repeated BatchPoolWithdrawMsg batch_pool_withdraw_msgs = 6   [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"batch_pool_withdraw_msgs\""];
//
//    repeated BatchPoolSwapMsg batch_pool_swap_msgs = 7   [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"batch_pool_swap_msgs\""];
//
//    repeated BatchPoolSwapMsgRecord batch_pool_swap_msg_records = 8   [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"batch_pool_swap_msg_records\""];
//
//    repeated QueryLiquidityPoolResponse liquidity_pool_records = 9   [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"liquidity_pool_records\""];
//
//    // TODO: invariant check balance of escrow module acc, reserveAcc
//
//}
//
//message BatchPoolDepositMsgRecord {
//    int64 msg_height = 1 [(gogoproto.moretags) = "yaml:\"msg_height\""];
//    uint64 msg_index = 2 [(gogoproto.moretags) = "yaml:\"msg_index\""];
//    bool executed = 3 [(gogoproto.moretags) = "yaml:\"executed\""];
//    bool succeed = 4 [(gogoproto.moretags) = "yaml:\"succeed\""];
//    bool to_delete = 5 [(gogoproto.moretags) = "yaml:\"to_delete\""];
//    MsgDepositToLiquidityPool Msg = 6 [(gogoproto.moretags) = "yaml:\"msg\"", (gogoproto.nullable) = false];
//}
//
//message BatchPoolWithdrawMsgRecord {
//    int64 msg_height = 1 [(gogoproto.moretags) = "yaml:\"msg_height\""];
//    uint64 msg_index = 2 [(gogoproto.moretags) = "yaml:\"msg_index\""];
//    bool executed = 3 [(gogoproto.moretags) = "yaml:\"executed\""];
//    bool succeed = 4 [(gogoproto.moretags) = "yaml:\"succeed\""];
//    bool to_delete = 5 [(gogoproto.moretags) = "yaml:\"to_delete\""];
//    MsgWithdrawFromLiquidityPool msg = 6 [(gogoproto.moretags) = "yaml:\"msg\"", (gogoproto.nullable) = false];
//}
//
message BatchPoolSwapMsgRecord {
    int64 msg_height = 1 [(gogoproto.moretags) = "yaml:\"msg_height\""];
    uint64 msg_index = 2 [(gogoproto.moretags) = "yaml:\"msg_index\""];
    bool executed = 3 [(gogoproto.moretags) = "yaml:\"executed\""];
    bool succeed = 4 [(gogoproto.moretags) = "yaml:\"succeed\""];
    bool to_delete = 5 [(gogoproto.moretags) = "yaml:\"to_delete\""];
    int64 order_expiry_height = 6 [(gogoproto.moretags) = "yaml:\"order_expiry_height\""];
    cosmos.base.v1beta1.Coin exchanged_offer_coin = 7 [
        (gogoproto.nullable)     = false,
        (gogoproto.moretags)     = "yaml:\"exchanged_offer_coin\""
    ];
    cosmos.base.v1beta1.Coin remaining_offer_coin = 8 [
        (gogoproto.nullable)     = false,
        (gogoproto.moretags)     = "yaml:\"remaining_offer_coin\""
    ];
    MsgSwap msg = 9 [(gogoproto.moretags) = "yaml:\"msg\"", (gogoproto.nullable) = false];
}
